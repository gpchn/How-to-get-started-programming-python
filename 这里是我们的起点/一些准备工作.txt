　　
   1.0.0
　　好，在你读这一行字的时候，我仿佛已经看见了一个未来的杰出编程师！
　　你现在肯定是兴致勃勃地在读这本书，想要学习一些python编程技能，这可是第一次！多么伟大的时刻！
　　那么你既然读的是python入门，我猜大概率你是不会python的（甚至从来没有接触过电脑）。不过不用担心，我会手把手地教授你python，从写下第一行代码到编写一些大型程序，这之间的一切东西，我都会不留遗漏地掰开揉碎给你看。python入门，是的，这就是整本书都在讲的内容，听起来不难，对吧？
　　废话不多说，我们进入正题。
　　
   1.0.1
　　想要学习编程，首先应该做一些准备工作，这就是这一章在讲的事情。
　　最基本的准备工作就是得有一个合适的电子设备。
　　这里所说的电子设备，是很重要的。有句古话说，工欲善其事，必先利其器。电子设备的适用性直接决定了你学习编程上阻碍的多少。
　　毋庸置疑的是，学习编程最好是用电脑。可能你不知道电脑有优点，以后在学习过程中你就会逐渐了解了。
　　然而，可能有一些特殊情况，比如你没有电脑，或者电脑被没收了等等。这些情况下，可能就没办法完成编程学业了……
　　吗？当然不可能！作者家里也是不太支持作者学编程的，大部分时间摸不到电脑，所以作者长此以往练就了一身绝活。
　　如果你没有这种困难，请跳过1.0.2和1.0.3，继续阅读1.0.4。

　　1.0.2
　　手机，是作者能接触到的电子设备中，最有机会的。
　　作者在长期学习过程中，摸索出了几种方法：
　　如果是安卓：
　　1. 使用QPython，一种安卓python IDE（集成开发环境，可以暂时理解为代码编辑器）。优点：开源应用（开源是指软件的代码是公开的，所有人都可以查看），有图形界面，对新手友好，安装即用。缺点：对第三方库支持不太好（可以暂时理解为可扩展性不够，不能安插件）
　　2. 使用Linux终端模拟器，例如作者使用的termux。优点：同样开源，功能强大，实打实的linux体验，几乎和电脑没有区别。缺点：只有命令行，对新手（尤其是彻彻底底的电脑小白）极其不友好，需要一定linux和vim使用技能。
　　3. 使用在线编辑器，例如作者有时候会用到的菜鸟教程在线编辑器。优点：相对来说仍然开源，对硬件要求极低，小白较友好。缺点：环境及第三方库体验极差（大部分），浏览器体验不如app流畅，写完代码没有保存功能。
　　如果是苹果：
　　1. 使用App Store上的python IDE，例如作者以前用的python3IDE。优点：相对来说很方便，适合新手，在苹果上运行正常，表现良好（毕竟苹果那么封闭）。缺点：闭源应用（开源的反义词，即代码不公开），同样对第三方库支持不好，环境暂时够用。
　　2. 使用ish软件（如果你还有别的linux终端模拟也可以用其他的，作者本人认为这是苹果上唯一能用的了）。优点：开源应用，快捷键我个人认为比termux更方便，其他同安卓第2点一样。缺点：输入有时候有延迟，它模拟的alpine linux的apk包管理器可用的包有点少（相较于其他linux），其他同安卓第2点一样。
　　3. 使用在线编辑器，同安卓第3点。

　　1.0.3
　　接下来介绍手机上的具体使用方法。
　　1. 使用linux模拟器，请输入命令：
　　termux：$ pkg install python3
　　ish：$ apk install python3
　　注：ish需要先下载apk包管理器，具体方法请上网查看
　　其他大部分模拟器：apt install python3
　　如果以上方法都不行，请上网查询你的模拟器上包管理器的安装命令。
　　另外，如果你的模拟器没有自带vim，作者建议你按照上面的命令安装vim编辑器，把python3换成vim即可。
　　安装完成后，请输入以下命令查看python是否安装完成：
　　$ python3 --version
　　如果输出内容里有一串数字是3.x.x，证明你安装正确。
　　如果输出内容里那串数字是2.x.x，你确实安装了python，不过你的python版本是python2，教程所讲版本是python3，请重新安装，注意查看你是否在输入安装命令时忘记了python3的那个3。
　　接下来有两种运行方法。
　　一种是命令行运行，请输入以下命令：
　　$ python3
　　来运行python命令行。当你看到>>>字样的时候你就可以开始输入命令了。
　　另外一种方法是文件运行：
　　输入以下命令来新建一个文件：
　　$ touch 文件名.py
　　以上命令会在当前目录下新建一个文件，但不会编辑它，只是一个空文件。
　　作者更建议使用vim命令，除非你想创建文件后先不编辑它，否则还是用以下命令好一些：
　　$ vim 文件名.py
　　以上命令会在这个文件不存在时新建它，接着编辑它。
　　进入vim界面后，输入i来编辑这个文件（即可以在这个文件里打字了），在编辑模式下按esc来退出编辑模式（即现在输入的东西被认为是vim命令，不会输入进文件），在这个时候输入英文冒号进入命令行模式，在屏幕左下角会出现一个小冒号（即此时输入的内容被认为是命令行命令），按回车执行这一段命令。
　　那么具体使用时该怎么做呢？
　　首先要新建一个python文件，就叫它file.py
　　$ vim file.py
　　然后进入vim界面，我们要编辑它。
　　输入i，看见左下角有insert输入字样，你开始输入一些代码。
　　输入完成了，此时应该保存并退出。你按下esc键，然后输入一个英文冒号，你看见左下角有一个冒号出现，你知道可以开始输入vim命令行命令了。
　　下面是一些常用vim命令行命令：
　　: w
　　保存，但不退出
　　: wq
　　保存并退出
　　: q!
　　注意，这是一个英文冒号，不要打成中文冒号。
　　强制退出，这种情况适用于你不想保存但是想退出。
　　: wq!
　　强制保存退出，这种情况适用于想保存一个只读文件并退出。
　　目前你能用到的基本就这几个，不再多介绍了。
　　回到这个场景，你想要保存退出，并且这是一个正常文件，所以你应该输入wq并回车。
　　回到linux命令行，你输入ls查看，可以发现file.py。
　　现在输入这行命令来运行它：
　　$ python3 -m file.py
　　有的时候你需要把.py去掉，即：
　　$ python3 -m file
　　可能是新版本特性吧。
　　当然，还有一种方法，输入：
　　$ chmod +x file.py
　　来使这个文件可以运行。
　　但是现在运行是行不通的，因为你没有指定这个文件应该怎么运行，而默认运行方法是使用bash，即运行bash脚本，相当于：
　　$ bash file.py
　　或：
　　$ sh file.py
　　这种方法当然是不行的，我们写的是python脚本，bash脚本的编译器怎么能正常运行它呢？
　　所以我们应该在文件里指定它该怎么运行，在文件的第一行加入下面的内容：
　　#!/usr/bin/env python3
　　或：
　　#!/usr/bin/python3
　　作者推荐第一种方法，因为这种方法是先寻找python3的路径，可移植性更强。听不懂没关系，以后用第一个就行了，养成好习惯。
　　保存退出后，输入：
　　$ ./file.py
　　来运行它，这和第一种方法的效果是一样的，并且有一个好处，不管你的文件名叫什么，哪怕后面不加.py后缀名，甚至不加后缀名，它都会按照python的方法来运行，因为你已经指定了运行方法。（不过作者还是不建议去掉后缀名的，这样编辑器就无法识别文件的种类了，编辑的时候可能会遇到缩进问题和高亮不显示的情况）
　　2. 使用IDE：
　　大部分情况还是有两种运行方法：
　　第一种方法，使用IDE内置的python命令行：
　　不同的IDE调出命令行的方法也各不相同，请自己摸索或上网搜索教程。
　　第二种方法，使用文件运行：
　　首先新建一个文件，大部分操作方法是单击一个加号按钮（或上面有类似new file字样）。
　　然后会出来一个编辑框，在里面输入代码。
　　有可能还需要保存，大部分操作方法是单击一个3.5寸软盘按钮（或上面有类似save字样）。
　　最关键的一步，运行，大部分操作方法是单击一个冲右的三角形按钮（或上面有类似run字样）。
　　这里作者建议使用第二种方法。
　　3. 使用在线编辑器：
　　打开你的在线编辑器，在输入框输入代码，点击运行按钮运行。
　　
　　1.0.4
　　现在来介绍电脑上的具体使用方法。
　　1. windows电脑：
　　请进入python官网下载页：
　　https://www.python.org/downloads/
　　选择windows版本中最新版本（但不要是dev版）下载安装包，x86_64是64位版本系统安装包，x86是32位版本系统安装包。
　　下载安装包，打开它，一路next就行（安装路径那里可以改，但是作者习惯安装到c盘的默认路径，看个人爱好和空间是否足够）
　　接下来就可以发现桌面上有一个python图标了，双击打开是一个黑色命令行，请参考1.0.3第一条，linux模拟器相关内容。
　　或者创建一个.py文件，在里面写python代码并保存，双击即可运行。这里有一个坑，这样运行python，运行结束以后那个窗口也会自动退出，就会有一种情况，你双击运行以后闪过一个黑色窗口，就什么都没有了。这种情况我们就要在文件的最后一行加入下面几个字：
　　input()
　　注意一定要英文括号，这样窗口运行完毕后就会等待输入回车再退出。
　　2. linux电脑：
　　请参考1.0.3中第一条，使用linux模拟器。这里的编辑器可以不使用vim，可以是图形界面编辑器，即可以跳过安装vim和使用vim的教程。（原谅作者也没用过图形界面linux写python程序，一直都是用的命令行）
　　3. mac电脑：
　　大部分参考1.0.4第一条，windows电脑，但安装包要选合适的mac版本
。运行过程可以参考1.0.4第一条，windows电脑（原谅作者没有mac电脑没亲自试过）
